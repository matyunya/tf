version: 1.1
nodes:
  examples = getExamples(data)
  data = loadData(shouldLoadData, tf)
  model = getModel()
  logs = train(data, model, shouldTrainModel)
  accuracy = logs.map((l, i) => [i, l[1]])
  loss = logs.map((l, i) => [i, l[0]])
  res = predict(tf, model, image)
layout:
[
  [,
    {
      "value": "Build sample canvases:"
    }
  ],
  [,
    {
      "node": "examples"
    }
  ],,
  [,
    {
      "value": "Dataset:"
    }
  ],
  [,
    {
      "node": "data"
    }
  ],,
  [,
    {
      "value": "Model:"
    }
  ],
  [,
    {
      "node": "model"
    }
  ],,
  [,
    {
      "value": "Logs:"
    }
  ],
  [,
    {
      "node": "logs"
    }
  ],,
  [,
    {
      "value": "Accuracy:"
    },,,
    {
      "value": "Loss:"
    }
  ],
  [,
    {
      "node": "accuracy",
      "expansion": {
        "vertical": true,
        "secondary": true,
        "height": 20,
        "width": 2
      }
    },,,
    {
      "node": "loss",
      "expansion": {
        "vertical": true,
        "secondary": true,
        "height": 20,
        "width": 2
      }
    }
  ],,,,,,,,,,,,,,,,,,,,,,
  [,
    {
      "node": "res",
      "expansion": {
        "vertical": true,
        "height": 14,
        "width": 1
      }
    }
  ]
]
